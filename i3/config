# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!


# VARIABLES
# use super key as main modifier
set $mod Mod4

# vim keys
set $left h
set $down j
set $up k
set $right l

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"


# keyboard layout; xkb nonsense
exec --no-startup-id setxkbmap -layout gb
exec --no-startup-id setxkbmap -option caps:escape

# WALLPAPER/BACKGROUND
exec --no-startup-id xsetroot -solid '#000000'

# NOTIFICATION DAEMON
exec --no-startup-id dunst &
bindsym $mod+n exec dunstctl close


# FONT
# font used for bar; also used for window titles, but we don't need those
font pango:DejaVu Sans Mono 12


# XDG/DESKTOP NONSENSE
# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex-autostart --autostart --environment i3


# SCREEN LOCKING/SLEEPING
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork  \
    --image='/home/thom/Pictures/Profile_Pics/TreesLine_2020-08-31.png'


# WIFI APPLET
# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet


# POWER/LOGIN KEYBINDINGS
bindsym $mod+Shift+Delete exit; exec brightnessctl set 100%; exec systemctl poweroff
bindsym $mod+Shift+q exec brightnessctl set 100% && i3-msg exit


# AUDIO/MEDIA CONTROL
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec amixer sset Master 2%+ && $refresh_i3status
bindsym XF86AudioLowerVolume exec amixer sset Master 2%- && $refresh_i3status
bindsym XF86AudioMute exec amixer sset Master toggle
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86MonBrightnessUp exec brightnessctl set +10%
bindsym XF86MonBrightnessDown exec brightnessctl set 10%-


# APP LAUNCH
bindsym $mod+Return exec wezterm
bindsym $mod+Shift+Return exec alacritty -e tmux
bindsym $mod+g exec alacritty -e clifm
bindsym $mod+b exec firefox
bindsym $mod+a exec rofi -show drun


# WINDOW DECORATIONS
# git rid of those damn titlebars
default_border pixel 3
hide_edge_borders both
# client.CLASS TITLE_BORDER BACKGROUND TEXT [INDICATIOR [CHILD_BORDER]]
# client.focused #000000 #000000 #000000  #002200 #007777AA
# client.focused_inactive #000000 #000000 #000000 #002222FF #002222FF
# client.unfocused #000000 #000000 #000000 #002222FF #002222FF
gaps inner 5

smart_gaps on
smart_borders on


# WINDOW MANAGEMENT PROPER
bindsym $mod+q kill
bindsym $mod+f fullscreen toggle


# CHANGE FOCUS
bindsym $mod+w focus next
bindsym $mod+x focus prev

# switch to workspace
bindsym $mod+$left workspace prev
bindsym $mod+$right workspace next
bindsym $mod+Left workspace prev
bindsym $mod+Right workspace next
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10


bindsym $mod+Up exec i3-msg workspace \
    $(i3-msg --raw -t get_workspaces | jq '.[] | select(.focused) | .num | (. + 3) % 9')
bindsym $mod+Down exec i3-msg workspace \
    $(i3-msg --raw -t get_workspaces | jq '.[] | select(.focused) | .num | (. - 3) % 9')
bindsym $mod+k exec i3-msg workspace \
    $(i3-msg --raw -t get_workspaces | jq '.[] | select(.focused) | .num | (. + 3) % 9')
bindsym $mod+j exec i3-msg workspace \
    $(i3-msg --raw -t get_workspaces | jq '.[] | select(.focused) | .num | (. - 3) % 9')



# MOVE WINDOW
# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace number $ws10

# move window to change layout
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# floating nonsense
bindsym $mod+minus floating toggle

bindsym $mod+Shift+s split horizontal
bindsym $mod+Shift+v split vertical
bindsym $mod+Mod1+l layout toggle tabbed split


# CONFIG NONSENSE
# reload the configuration file
bindsym $mod+Shift+c reload


# PANEL/BAR
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        position top
        status_command i3status
}
